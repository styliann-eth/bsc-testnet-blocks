// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class Transfer extends ethereum.Event {
  get params(): Transfer__Params {
    return new Transfer__Params(this);
  }
}

export class Transfer__Params {
  _event: Transfer;

  constructor(event: Transfer) {
    this._event = event;
  }

  get from(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get to(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get value(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class Approval extends ethereum.Event {
  get params(): Approval__Params {
    return new Approval__Params(this);
  }
}

export class Approval__Params {
  _event: Approval;

  constructor(event: Approval) {
    this._event = event;
  }

  get owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get spender(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get value(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class OwnershipTransferProposed extends ethereum.Event {
  get params(): OwnershipTransferProposed__Params {
    return new OwnershipTransferProposed__Params(this);
  }
}

export class OwnershipTransferProposed__Params {
  _event: OwnershipTransferProposed;

  constructor(event: OwnershipTransferProposed) {
    this._event = event;
  }

  get currentOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get proposedOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class OwnershipTransferDisregarded extends ethereum.Event {
  get params(): OwnershipTransferDisregarded__Params {
    return new OwnershipTransferDisregarded__Params(this);
  }
}

export class OwnershipTransferDisregarded__Params {
  _event: OwnershipTransferDisregarded;

  constructor(event: OwnershipTransferDisregarded) {
    this._event = event;
  }

  get oldProposedOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get oldOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class Pause extends ethereum.Event {
  get params(): Pause__Params {
    return new Pause__Params(this);
  }
}

export class Pause__Params {
  _event: Pause;

  constructor(event: Pause) {
    this._event = event;
  }
}

export class Unpause extends ethereum.Event {
  get params(): Unpause__Params {
    return new Unpause__Params(this);
  }
}

export class Unpause__Params {
  _event: Unpause;

  constructor(event: Unpause) {
    this._event = event;
  }
}

export class AddressFrozen extends ethereum.Event {
  get params(): AddressFrozen__Params {
    return new AddressFrozen__Params(this);
  }
}

export class AddressFrozen__Params {
  _event: AddressFrozen;

  constructor(event: AddressFrozen) {
    this._event = event;
  }

  get addr(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class AddressUnfrozen extends ethereum.Event {
  get params(): AddressUnfrozen__Params {
    return new AddressUnfrozen__Params(this);
  }
}

export class AddressUnfrozen__Params {
  _event: AddressUnfrozen;

  constructor(event: AddressUnfrozen) {
    this._event = event;
  }

  get addr(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class FrozenAddressWiped extends ethereum.Event {
  get params(): FrozenAddressWiped__Params {
    return new FrozenAddressWiped__Params(this);
  }
}

export class FrozenAddressWiped__Params {
  _event: FrozenAddressWiped;

  constructor(event: FrozenAddressWiped) {
    this._event = event;
  }

  get addr(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class AssetProtectionRoleSet extends ethereum.Event {
  get params(): AssetProtectionRoleSet__Params {
    return new AssetProtectionRoleSet__Params(this);
  }
}

export class AssetProtectionRoleSet__Params {
  _event: AssetProtectionRoleSet;

  constructor(event: AssetProtectionRoleSet) {
    this._event = event;
  }

  get oldAssetProtectionRole(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newAssetProtectionRole(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class SupplyIncreased extends ethereum.Event {
  get params(): SupplyIncreased__Params {
    return new SupplyIncreased__Params(this);
  }
}

export class SupplyIncreased__Params {
  _event: SupplyIncreased;

  constructor(event: SupplyIncreased) {
    this._event = event;
  }

  get to(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get value(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class SupplyDecreased extends ethereum.Event {
  get params(): SupplyDecreased__Params {
    return new SupplyDecreased__Params(this);
  }
}

export class SupplyDecreased__Params {
  _event: SupplyDecreased;

  constructor(event: SupplyDecreased) {
    this._event = event;
  }

  get from(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get value(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class SupplyControllerSet extends ethereum.Event {
  get params(): SupplyControllerSet__Params {
    return new SupplyControllerSet__Params(this);
  }
}

export class SupplyControllerSet__Params {
  _event: SupplyControllerSet;

  constructor(event: SupplyControllerSet) {
    this._event = event;
  }

  get oldSupplyController(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newSupplyController(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class BetaDelegatedTransfer extends ethereum.Event {
  get params(): BetaDelegatedTransfer__Params {
    return new BetaDelegatedTransfer__Params(this);
  }
}

export class BetaDelegatedTransfer__Params {
  _event: BetaDelegatedTransfer;

  constructor(event: BetaDelegatedTransfer) {
    this._event = event;
  }

  get from(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get to(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get value(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get seq(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get fee(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class BetaDelegateWhitelisterSet extends ethereum.Event {
  get params(): BetaDelegateWhitelisterSet__Params {
    return new BetaDelegateWhitelisterSet__Params(this);
  }
}

export class BetaDelegateWhitelisterSet__Params {
  _event: BetaDelegateWhitelisterSet;

  constructor(event: BetaDelegateWhitelisterSet) {
    this._event = event;
  }

  get oldWhitelister(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newWhitelister(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class BetaDelegateWhitelisted extends ethereum.Event {
  get params(): BetaDelegateWhitelisted__Params {
    return new BetaDelegateWhitelisted__Params(this);
  }
}

export class BetaDelegateWhitelisted__Params {
  _event: BetaDelegateWhitelisted;

  constructor(event: BetaDelegateWhitelisted) {
    this._event = event;
  }

  get newDelegate(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class BetaDelegateUnwhitelisted extends ethereum.Event {
  get params(): BetaDelegateUnwhitelisted__Params {
    return new BetaDelegateUnwhitelisted__Params(this);
  }
}

export class BetaDelegateUnwhitelisted__Params {
  _event: BetaDelegateUnwhitelisted;

  constructor(event: BetaDelegateUnwhitelisted) {
    this._event = event;
  }

  get oldDelegate(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class BUSDImplementation extends ethereum.SmartContract {
  static bind(address: Address): BUSDImplementation {
    return new BUSDImplementation("BUSDImplementation", address);
  }

  name(): string {
    let result = super.call("name", "name():(string)", []);

    return result[0].toString();
  }

  try_name(): ethereum.CallResult<string> {
    let result = super.tryCall("name", "name():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  approve(_spender: Address, _value: BigInt): boolean {
    let result = super.call("approve", "approve(address,uint256):(bool)", [
      ethereum.Value.fromAddress(_spender),
      ethereum.Value.fromUnsignedBigInt(_value)
    ]);

    return result[0].toBoolean();
  }

  try_approve(_spender: Address, _value: BigInt): ethereum.CallResult<boolean> {
    let result = super.tryCall("approve", "approve(address,uint256):(bool)", [
      ethereum.Value.fromAddress(_spender),
      ethereum.Value.fromUnsignedBigInt(_value)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  assetProtectionRole(): Address {
    let result = super.call(
      "assetProtectionRole",
      "assetProtectionRole():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_assetProtectionRole(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "assetProtectionRole",
      "assetProtectionRole():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  totalSupply(): BigInt {
    let result = super.call("totalSupply", "totalSupply():(uint256)", []);

    return result[0].toBigInt();
  }

  try_totalSupply(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("totalSupply", "totalSupply():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  betaDelegatedTransferBatch(
    r: Array<Bytes>,
    s: Array<Bytes>,
    v: Array<i32>,
    to: Array<Address>,
    value: Array<BigInt>,
    fee: Array<BigInt>,
    seq: Array<BigInt>,
    deadline: Array<BigInt>
  ): boolean {
    let result = super.call(
      "betaDelegatedTransferBatch",
      "betaDelegatedTransferBatch(bytes32[],bytes32[],uint8[],address[],uint256[],uint256[],uint256[],uint256[]):(bool)",
      [
        ethereum.Value.fromFixedBytesArray(r),
        ethereum.Value.fromFixedBytesArray(s),
        ethereum.Value.fromI32Array(v),
        ethereum.Value.fromAddressArray(to),
        ethereum.Value.fromUnsignedBigIntArray(value),
        ethereum.Value.fromUnsignedBigIntArray(fee),
        ethereum.Value.fromUnsignedBigIntArray(seq),
        ethereum.Value.fromUnsignedBigIntArray(deadline)
      ]
    );

    return result[0].toBoolean();
  }

  try_betaDelegatedTransferBatch(
    r: Array<Bytes>,
    s: Array<Bytes>,
    v: Array<i32>,
    to: Array<Address>,
    value: Array<BigInt>,
    fee: Array<BigInt>,
    seq: Array<BigInt>,
    deadline: Array<BigInt>
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "betaDelegatedTransferBatch",
      "betaDelegatedTransferBatch(bytes32[],bytes32[],uint8[],address[],uint256[],uint256[],uint256[],uint256[]):(bool)",
      [
        ethereum.Value.fromFixedBytesArray(r),
        ethereum.Value.fromFixedBytesArray(s),
        ethereum.Value.fromI32Array(v),
        ethereum.Value.fromAddressArray(to),
        ethereum.Value.fromUnsignedBigIntArray(value),
        ethereum.Value.fromUnsignedBigIntArray(fee),
        ethereum.Value.fromUnsignedBigIntArray(seq),
        ethereum.Value.fromUnsignedBigIntArray(deadline)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  betaDelegatedTransfer(
    sig: Bytes,
    to: Address,
    value: BigInt,
    fee: BigInt,
    seq: BigInt,
    deadline: BigInt
  ): boolean {
    let result = super.call(
      "betaDelegatedTransfer",
      "betaDelegatedTransfer(bytes,address,uint256,uint256,uint256,uint256):(bool)",
      [
        ethereum.Value.fromBytes(sig),
        ethereum.Value.fromAddress(to),
        ethereum.Value.fromUnsignedBigInt(value),
        ethereum.Value.fromUnsignedBigInt(fee),
        ethereum.Value.fromUnsignedBigInt(seq),
        ethereum.Value.fromUnsignedBigInt(deadline)
      ]
    );

    return result[0].toBoolean();
  }

  try_betaDelegatedTransfer(
    sig: Bytes,
    to: Address,
    value: BigInt,
    fee: BigInt,
    seq: BigInt,
    deadline: BigInt
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "betaDelegatedTransfer",
      "betaDelegatedTransfer(bytes,address,uint256,uint256,uint256,uint256):(bool)",
      [
        ethereum.Value.fromBytes(sig),
        ethereum.Value.fromAddress(to),
        ethereum.Value.fromUnsignedBigInt(value),
        ethereum.Value.fromUnsignedBigInt(fee),
        ethereum.Value.fromUnsignedBigInt(seq),
        ethereum.Value.fromUnsignedBigInt(deadline)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  transferFrom(_from: Address, _to: Address, _value: BigInt): boolean {
    let result = super.call(
      "transferFrom",
      "transferFrom(address,address,uint256):(bool)",
      [
        ethereum.Value.fromAddress(_from),
        ethereum.Value.fromAddress(_to),
        ethereum.Value.fromUnsignedBigInt(_value)
      ]
    );

    return result[0].toBoolean();
  }

  try_transferFrom(
    _from: Address,
    _to: Address,
    _value: BigInt
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "transferFrom",
      "transferFrom(address,address,uint256):(bool)",
      [
        ethereum.Value.fromAddress(_from),
        ethereum.Value.fromAddress(_to),
        ethereum.Value.fromUnsignedBigInt(_value)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  decimals(): i32 {
    let result = super.call("decimals", "decimals():(uint8)", []);

    return result[0].toI32();
  }

  try_decimals(): ethereum.CallResult<i32> {
    let result = super.tryCall("decimals", "decimals():(uint8)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  paused(): boolean {
    let result = super.call("paused", "paused():(bool)", []);

    return result[0].toBoolean();
  }

  try_paused(): ethereum.CallResult<boolean> {
    let result = super.tryCall("paused", "paused():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  balanceOf(_addr: Address): BigInt {
    let result = super.call("balanceOf", "balanceOf(address):(uint256)", [
      ethereum.Value.fromAddress(_addr)
    ]);

    return result[0].toBigInt();
  }

  try_balanceOf(_addr: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall("balanceOf", "balanceOf(address):(uint256)", [
      ethereum.Value.fromAddress(_addr)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getOwner(): Address {
    let result = super.call("getOwner", "getOwner():(address)", []);

    return result[0].toAddress();
  }

  try_getOwner(): ethereum.CallResult<Address> {
    let result = super.tryCall("getOwner", "getOwner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  nextSeqOf(target: Address): BigInt {
    let result = super.call("nextSeqOf", "nextSeqOf(address):(uint256)", [
      ethereum.Value.fromAddress(target)
    ]);

    return result[0].toBigInt();
  }

  try_nextSeqOf(target: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall("nextSeqOf", "nextSeqOf(address):(uint256)", [
      ethereum.Value.fromAddress(target)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  symbol(): string {
    let result = super.call("symbol", "symbol():(string)", []);

    return result[0].toString();
  }

  try_symbol(): ethereum.CallResult<string> {
    let result = super.tryCall("symbol", "symbol():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  decreaseSupply(_value: BigInt): boolean {
    let result = super.call(
      "decreaseSupply",
      "decreaseSupply(uint256):(bool)",
      [ethereum.Value.fromUnsignedBigInt(_value)]
    );

    return result[0].toBoolean();
  }

  try_decreaseSupply(_value: BigInt): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "decreaseSupply",
      "decreaseSupply(uint256):(bool)",
      [ethereum.Value.fromUnsignedBigInt(_value)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isWhitelistedBetaDelegate(_addr: Address): boolean {
    let result = super.call(
      "isWhitelistedBetaDelegate",
      "isWhitelistedBetaDelegate(address):(bool)",
      [ethereum.Value.fromAddress(_addr)]
    );

    return result[0].toBoolean();
  }

  try_isWhitelistedBetaDelegate(_addr: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isWhitelistedBetaDelegate",
      "isWhitelistedBetaDelegate(address):(bool)",
      [ethereum.Value.fromAddress(_addr)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  transfer(_to: Address, _value: BigInt): boolean {
    let result = super.call("transfer", "transfer(address,uint256):(bool)", [
      ethereum.Value.fromAddress(_to),
      ethereum.Value.fromUnsignedBigInt(_value)
    ]);

    return result[0].toBoolean();
  }

  try_transfer(_to: Address, _value: BigInt): ethereum.CallResult<boolean> {
    let result = super.tryCall("transfer", "transfer(address,uint256):(bool)", [
      ethereum.Value.fromAddress(_to),
      ethereum.Value.fromUnsignedBigInt(_value)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  increaseSupply(_value: BigInt): boolean {
    let result = super.call(
      "increaseSupply",
      "increaseSupply(uint256):(bool)",
      [ethereum.Value.fromUnsignedBigInt(_value)]
    );

    return result[0].toBoolean();
  }

  try_increaseSupply(_value: BigInt): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "increaseSupply",
      "increaseSupply(uint256):(bool)",
      [ethereum.Value.fromUnsignedBigInt(_value)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  betaDelegateWhitelister(): Address {
    let result = super.call(
      "betaDelegateWhitelister",
      "betaDelegateWhitelister():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_betaDelegateWhitelister(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "betaDelegateWhitelister",
      "betaDelegateWhitelister():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  proposedOwner(): Address {
    let result = super.call("proposedOwner", "proposedOwner():(address)", []);

    return result[0].toAddress();
  }

  try_proposedOwner(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "proposedOwner",
      "proposedOwner():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  allowance(_owner: Address, _spender: Address): BigInt {
    let result = super.call(
      "allowance",
      "allowance(address,address):(uint256)",
      [ethereum.Value.fromAddress(_owner), ethereum.Value.fromAddress(_spender)]
    );

    return result[0].toBigInt();
  }

  try_allowance(
    _owner: Address,
    _spender: Address
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "allowance",
      "allowance(address,address):(uint256)",
      [ethereum.Value.fromAddress(_owner), ethereum.Value.fromAddress(_spender)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  EIP712_DOMAIN_HASH(): Bytes {
    let result = super.call(
      "EIP712_DOMAIN_HASH",
      "EIP712_DOMAIN_HASH():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_EIP712_DOMAIN_HASH(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "EIP712_DOMAIN_HASH",
      "EIP712_DOMAIN_HASH():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  isFrozen(_addr: Address): boolean {
    let result = super.call("isFrozen", "isFrozen(address):(bool)", [
      ethereum.Value.fromAddress(_addr)
    ]);

    return result[0].toBoolean();
  }

  try_isFrozen(_addr: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("isFrozen", "isFrozen(address):(bool)", [
      ethereum.Value.fromAddress(_addr)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  supplyController(): Address {
    let result = super.call(
      "supplyController",
      "supplyController():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_supplyController(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "supplyController",
      "supplyController():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class DisregardProposeOwnerCall extends ethereum.Call {
  get inputs(): DisregardProposeOwnerCall__Inputs {
    return new DisregardProposeOwnerCall__Inputs(this);
  }

  get outputs(): DisregardProposeOwnerCall__Outputs {
    return new DisregardProposeOwnerCall__Outputs(this);
  }
}

export class DisregardProposeOwnerCall__Inputs {
  _call: DisregardProposeOwnerCall;

  constructor(call: DisregardProposeOwnerCall) {
    this._call = call;
  }
}

export class DisregardProposeOwnerCall__Outputs {
  _call: DisregardProposeOwnerCall;

  constructor(call: DisregardProposeOwnerCall) {
    this._call = call;
  }
}

export class ApproveCall extends ethereum.Call {
  get inputs(): ApproveCall__Inputs {
    return new ApproveCall__Inputs(this);
  }

  get outputs(): ApproveCall__Outputs {
    return new ApproveCall__Outputs(this);
  }
}

export class ApproveCall__Inputs {
  _call: ApproveCall;

  constructor(call: ApproveCall) {
    this._call = call;
  }

  get _spender(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _value(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class ApproveCall__Outputs {
  _call: ApproveCall;

  constructor(call: ApproveCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class BetaDelegatedTransferBatchCall extends ethereum.Call {
  get inputs(): BetaDelegatedTransferBatchCall__Inputs {
    return new BetaDelegatedTransferBatchCall__Inputs(this);
  }

  get outputs(): BetaDelegatedTransferBatchCall__Outputs {
    return new BetaDelegatedTransferBatchCall__Outputs(this);
  }
}

export class BetaDelegatedTransferBatchCall__Inputs {
  _call: BetaDelegatedTransferBatchCall;

  constructor(call: BetaDelegatedTransferBatchCall) {
    this._call = call;
  }

  get r(): Array<Bytes> {
    return this._call.inputValues[0].value.toBytesArray();
  }

  get s(): Array<Bytes> {
    return this._call.inputValues[1].value.toBytesArray();
  }

  get v(): Array<i32> {
    return this._call.inputValues[2].value.toI32Array();
  }

  get to(): Array<Address> {
    return this._call.inputValues[3].value.toAddressArray();
  }

  get value(): Array<BigInt> {
    return this._call.inputValues[4].value.toBigIntArray();
  }

  get fee(): Array<BigInt> {
    return this._call.inputValues[5].value.toBigIntArray();
  }

  get seq(): Array<BigInt> {
    return this._call.inputValues[6].value.toBigIntArray();
  }

  get deadline(): Array<BigInt> {
    return this._call.inputValues[7].value.toBigIntArray();
  }
}

export class BetaDelegatedTransferBatchCall__Outputs {
  _call: BetaDelegatedTransferBatchCall;

  constructor(call: BetaDelegatedTransferBatchCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class BetaDelegatedTransferCall extends ethereum.Call {
  get inputs(): BetaDelegatedTransferCall__Inputs {
    return new BetaDelegatedTransferCall__Inputs(this);
  }

  get outputs(): BetaDelegatedTransferCall__Outputs {
    return new BetaDelegatedTransferCall__Outputs(this);
  }
}

export class BetaDelegatedTransferCall__Inputs {
  _call: BetaDelegatedTransferCall;

  constructor(call: BetaDelegatedTransferCall) {
    this._call = call;
  }

  get sig(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get to(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get value(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get fee(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get seq(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get deadline(): BigInt {
    return this._call.inputValues[5].value.toBigInt();
  }
}

export class BetaDelegatedTransferCall__Outputs {
  _call: BetaDelegatedTransferCall;

  constructor(call: BetaDelegatedTransferCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class TransferFromCall extends ethereum.Call {
  get inputs(): TransferFromCall__Inputs {
    return new TransferFromCall__Inputs(this);
  }

  get outputs(): TransferFromCall__Outputs {
    return new TransferFromCall__Outputs(this);
  }
}

export class TransferFromCall__Inputs {
  _call: TransferFromCall;

  constructor(call: TransferFromCall) {
    this._call = call;
  }

  get _from(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _to(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _value(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class TransferFromCall__Outputs {
  _call: TransferFromCall;

  constructor(call: TransferFromCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class InitializeDomainSeparatorCall extends ethereum.Call {
  get inputs(): InitializeDomainSeparatorCall__Inputs {
    return new InitializeDomainSeparatorCall__Inputs(this);
  }

  get outputs(): InitializeDomainSeparatorCall__Outputs {
    return new InitializeDomainSeparatorCall__Outputs(this);
  }
}

export class InitializeDomainSeparatorCall__Inputs {
  _call: InitializeDomainSeparatorCall;

  constructor(call: InitializeDomainSeparatorCall) {
    this._call = call;
  }
}

export class InitializeDomainSeparatorCall__Outputs {
  _call: InitializeDomainSeparatorCall;

  constructor(call: InitializeDomainSeparatorCall) {
    this._call = call;
  }
}

export class UnpauseCall extends ethereum.Call {
  get inputs(): UnpauseCall__Inputs {
    return new UnpauseCall__Inputs(this);
  }

  get outputs(): UnpauseCall__Outputs {
    return new UnpauseCall__Outputs(this);
  }
}

export class UnpauseCall__Inputs {
  _call: UnpauseCall;

  constructor(call: UnpauseCall) {
    this._call = call;
  }
}

export class UnpauseCall__Outputs {
  _call: UnpauseCall;

  constructor(call: UnpauseCall) {
    this._call = call;
  }
}

export class UnfreezeCall extends ethereum.Call {
  get inputs(): UnfreezeCall__Inputs {
    return new UnfreezeCall__Inputs(this);
  }

  get outputs(): UnfreezeCall__Outputs {
    return new UnfreezeCall__Outputs(this);
  }
}

export class UnfreezeCall__Inputs {
  _call: UnfreezeCall;

  constructor(call: UnfreezeCall) {
    this._call = call;
  }

  get _addr(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class UnfreezeCall__Outputs {
  _call: UnfreezeCall;

  constructor(call: UnfreezeCall) {
    this._call = call;
  }
}

export class ClaimOwnershipCall extends ethereum.Call {
  get inputs(): ClaimOwnershipCall__Inputs {
    return new ClaimOwnershipCall__Inputs(this);
  }

  get outputs(): ClaimOwnershipCall__Outputs {
    return new ClaimOwnershipCall__Outputs(this);
  }
}

export class ClaimOwnershipCall__Inputs {
  _call: ClaimOwnershipCall;

  constructor(call: ClaimOwnershipCall) {
    this._call = call;
  }
}

export class ClaimOwnershipCall__Outputs {
  _call: ClaimOwnershipCall;

  constructor(call: ClaimOwnershipCall) {
    this._call = call;
  }
}

export class SetSupplyControllerCall extends ethereum.Call {
  get inputs(): SetSupplyControllerCall__Inputs {
    return new SetSupplyControllerCall__Inputs(this);
  }

  get outputs(): SetSupplyControllerCall__Outputs {
    return new SetSupplyControllerCall__Outputs(this);
  }
}

export class SetSupplyControllerCall__Inputs {
  _call: SetSupplyControllerCall;

  constructor(call: SetSupplyControllerCall) {
    this._call = call;
  }

  get _newSupplyController(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetSupplyControllerCall__Outputs {
  _call: SetSupplyControllerCall;

  constructor(call: SetSupplyControllerCall) {
    this._call = call;
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class PauseCall extends ethereum.Call {
  get inputs(): PauseCall__Inputs {
    return new PauseCall__Inputs(this);
  }

  get outputs(): PauseCall__Outputs {
    return new PauseCall__Outputs(this);
  }
}

export class PauseCall__Inputs {
  _call: PauseCall;

  constructor(call: PauseCall) {
    this._call = call;
  }
}

export class PauseCall__Outputs {
  _call: PauseCall;

  constructor(call: PauseCall) {
    this._call = call;
  }
}

export class SetAssetProtectionRoleCall extends ethereum.Call {
  get inputs(): SetAssetProtectionRoleCall__Inputs {
    return new SetAssetProtectionRoleCall__Inputs(this);
  }

  get outputs(): SetAssetProtectionRoleCall__Outputs {
    return new SetAssetProtectionRoleCall__Outputs(this);
  }
}

export class SetAssetProtectionRoleCall__Inputs {
  _call: SetAssetProtectionRoleCall;

  constructor(call: SetAssetProtectionRoleCall) {
    this._call = call;
  }

  get _newAssetProtectionRole(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetAssetProtectionRoleCall__Outputs {
  _call: SetAssetProtectionRoleCall;

  constructor(call: SetAssetProtectionRoleCall) {
    this._call = call;
  }
}

export class FreezeCall extends ethereum.Call {
  get inputs(): FreezeCall__Inputs {
    return new FreezeCall__Inputs(this);
  }

  get outputs(): FreezeCall__Outputs {
    return new FreezeCall__Outputs(this);
  }
}

export class FreezeCall__Inputs {
  _call: FreezeCall;

  constructor(call: FreezeCall) {
    this._call = call;
  }

  get _addr(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class FreezeCall__Outputs {
  _call: FreezeCall;

  constructor(call: FreezeCall) {
    this._call = call;
  }
}

export class SetBetaDelegateWhitelisterCall extends ethereum.Call {
  get inputs(): SetBetaDelegateWhitelisterCall__Inputs {
    return new SetBetaDelegateWhitelisterCall__Inputs(this);
  }

  get outputs(): SetBetaDelegateWhitelisterCall__Outputs {
    return new SetBetaDelegateWhitelisterCall__Outputs(this);
  }
}

export class SetBetaDelegateWhitelisterCall__Inputs {
  _call: SetBetaDelegateWhitelisterCall;

  constructor(call: SetBetaDelegateWhitelisterCall) {
    this._call = call;
  }

  get _newWhitelister(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetBetaDelegateWhitelisterCall__Outputs {
  _call: SetBetaDelegateWhitelisterCall;

  constructor(call: SetBetaDelegateWhitelisterCall) {
    this._call = call;
  }
}

export class DecreaseSupplyCall extends ethereum.Call {
  get inputs(): DecreaseSupplyCall__Inputs {
    return new DecreaseSupplyCall__Inputs(this);
  }

  get outputs(): DecreaseSupplyCall__Outputs {
    return new DecreaseSupplyCall__Outputs(this);
  }
}

export class DecreaseSupplyCall__Inputs {
  _call: DecreaseSupplyCall;

  constructor(call: DecreaseSupplyCall) {
    this._call = call;
  }

  get _value(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class DecreaseSupplyCall__Outputs {
  _call: DecreaseSupplyCall;

  constructor(call: DecreaseSupplyCall) {
    this._call = call;
  }

  get success(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class TransferCall extends ethereum.Call {
  get inputs(): TransferCall__Inputs {
    return new TransferCall__Inputs(this);
  }

  get outputs(): TransferCall__Outputs {
    return new TransferCall__Outputs(this);
  }
}

export class TransferCall__Inputs {
  _call: TransferCall;

  constructor(call: TransferCall) {
    this._call = call;
  }

  get _to(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _value(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class TransferCall__Outputs {
  _call: TransferCall;

  constructor(call: TransferCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class WhitelistBetaDelegateCall extends ethereum.Call {
  get inputs(): WhitelistBetaDelegateCall__Inputs {
    return new WhitelistBetaDelegateCall__Inputs(this);
  }

  get outputs(): WhitelistBetaDelegateCall__Outputs {
    return new WhitelistBetaDelegateCall__Outputs(this);
  }
}

export class WhitelistBetaDelegateCall__Inputs {
  _call: WhitelistBetaDelegateCall;

  constructor(call: WhitelistBetaDelegateCall) {
    this._call = call;
  }

  get _addr(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class WhitelistBetaDelegateCall__Outputs {
  _call: WhitelistBetaDelegateCall;

  constructor(call: WhitelistBetaDelegateCall) {
    this._call = call;
  }
}

export class ProposeOwnerCall extends ethereum.Call {
  get inputs(): ProposeOwnerCall__Inputs {
    return new ProposeOwnerCall__Inputs(this);
  }

  get outputs(): ProposeOwnerCall__Outputs {
    return new ProposeOwnerCall__Outputs(this);
  }
}

export class ProposeOwnerCall__Inputs {
  _call: ProposeOwnerCall;

  constructor(call: ProposeOwnerCall) {
    this._call = call;
  }

  get _proposedOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ProposeOwnerCall__Outputs {
  _call: ProposeOwnerCall;

  constructor(call: ProposeOwnerCall) {
    this._call = call;
  }
}

export class IncreaseSupplyCall extends ethereum.Call {
  get inputs(): IncreaseSupplyCall__Inputs {
    return new IncreaseSupplyCall__Inputs(this);
  }

  get outputs(): IncreaseSupplyCall__Outputs {
    return new IncreaseSupplyCall__Outputs(this);
  }
}

export class IncreaseSupplyCall__Inputs {
  _call: IncreaseSupplyCall;

  constructor(call: IncreaseSupplyCall) {
    this._call = call;
  }

  get _value(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class IncreaseSupplyCall__Outputs {
  _call: IncreaseSupplyCall;

  constructor(call: IncreaseSupplyCall) {
    this._call = call;
  }

  get success(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class UnwhitelistBetaDelegateCall extends ethereum.Call {
  get inputs(): UnwhitelistBetaDelegateCall__Inputs {
    return new UnwhitelistBetaDelegateCall__Inputs(this);
  }

  get outputs(): UnwhitelistBetaDelegateCall__Outputs {
    return new UnwhitelistBetaDelegateCall__Outputs(this);
  }
}

export class UnwhitelistBetaDelegateCall__Inputs {
  _call: UnwhitelistBetaDelegateCall;

  constructor(call: UnwhitelistBetaDelegateCall) {
    this._call = call;
  }

  get _addr(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class UnwhitelistBetaDelegateCall__Outputs {
  _call: UnwhitelistBetaDelegateCall;

  constructor(call: UnwhitelistBetaDelegateCall) {
    this._call = call;
  }
}

export class WipeFrozenAddressCall extends ethereum.Call {
  get inputs(): WipeFrozenAddressCall__Inputs {
    return new WipeFrozenAddressCall__Inputs(this);
  }

  get outputs(): WipeFrozenAddressCall__Outputs {
    return new WipeFrozenAddressCall__Outputs(this);
  }
}

export class WipeFrozenAddressCall__Inputs {
  _call: WipeFrozenAddressCall;

  constructor(call: WipeFrozenAddressCall) {
    this._call = call;
  }

  get _addr(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class WipeFrozenAddressCall__Outputs {
  _call: WipeFrozenAddressCall;

  constructor(call: WipeFrozenAddressCall) {
    this._call = call;
  }
}

export class ReclaimBUSDCall extends ethereum.Call {
  get inputs(): ReclaimBUSDCall__Inputs {
    return new ReclaimBUSDCall__Inputs(this);
  }

  get outputs(): ReclaimBUSDCall__Outputs {
    return new ReclaimBUSDCall__Outputs(this);
  }
}

export class ReclaimBUSDCall__Inputs {
  _call: ReclaimBUSDCall;

  constructor(call: ReclaimBUSDCall) {
    this._call = call;
  }
}

export class ReclaimBUSDCall__Outputs {
  _call: ReclaimBUSDCall;

  constructor(call: ReclaimBUSDCall) {
    this._call = call;
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}
